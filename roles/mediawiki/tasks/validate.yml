- name: Check {{ migration_sample_name }} mariadb resource status
  k8s_facts:
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors: "app=mariadb"
  register: pod
  until: "true in (pod | json_query('resources[].status.containerStatuses[].ready'))"
  retries: 60
  delay: 10

- name: Check {{ migration_sample_name }} resource status
  k8s_facts:
    kind: Pod
    namespace: "{{ namespace }}"
    label_selectors: "app=mediawiki"
  register: pod
  until: "true in (pod | json_query('resources[].status.containerStatuses[].ready'))"
  retries: 60
  delay: 10

- name: Obtain {{ migration_sample_name }} route
  k8s_facts:
    kind: Route
    namespace: "{{ namespace }}"
    label_selectors: "app=mediawiki"
  register: mediawiki_route

# Update MEDIAWIKI_SITE_SERVER after migration
- name: Update {{ migration_sample_name }} site config
  shell: "{{ oc_binary }} -n {{ namespace }} set env dc/mediawiki MEDIAWIKI_SITE_SERVER={{ mediawiki_route.resources[0].spec.host }}"
  when: with_migrate|bool

- name: Verify {{ migration_sample_name }} is available
  uri:
    url: "https://{{ mediawiki_route.resources[0].spec.host }}"
    method: GET
    return_content: yes
    validate_certs: no
  register: uri
  until: "'MediaWiki' in uri.content"
  retries: 24
  delay: 10
